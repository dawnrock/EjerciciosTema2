{"version":3,"sources":["index.ts","../../../../Users/manue/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAGA,IAAM,WAAW,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,UAAjC,CAApB;AAEA,OAAO,CAAC,GAAR,CAAY,qBAAZ,EAAoC,WAApC;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;;AAEA,IAAM,IAAI,GAAG,SAAP,IAAO;AAAA;AAAA,MAAE,OAAF;;AAAA,SAA4B,OAA5B;AAAA,CAAb;;AAGA,OAAO,CAAC,GAAR,CAAY,mBAAZ,EAAiC,IAAI,CAAC,WAAD,CAArC;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;AAGA,IAAM,IAAI,GAAG,SAAP,IAAO;AAAA;AAAA,MAAO,mBAAP;;AAAA,SAAgC,mBAAhC;AAAA,CAAb;;AAEA,OAAO,CAAC,GAAR,CAAY,wCAAZ,EAAsD,IAAI,CAAC,WAAD,CAA1D;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;AAGC,IAAM,IAAI,GAAG,SAAP,IAAO,CAAA,eAAe,EAAG;AAC5B,EAAA,OAAO,CAAC,GAAR,CAAY,iCAAZ,EAA+C,CAAC,eAAe,CAAC,GAAhB,EAAD,CAA/C;AACA,SAAO,eAAP;AACH,CAHA;AAMD;;;AAEA,OAAO,CAAC,GAAR,CAAY,+CAAZ,EAA6D,IAAI,CAAC,WAAD,CAAjE;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;AAGA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAA,eAAe;AAAA,SAAK,CAAC,eAAe,CAAC,GAAhB,EAAD,CAAL;AAAA,CAA5B,EAEA;;;AAGA,OAAO,CAAC,GAAR,CAAY,qHAAZ,EAAmI,IAAI,CAAC,WAAD,CAAvI;AACA,OAAO,CAAC,GAAR,CAAY,qEAAZ,EAAmF,WAAnF;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAEA,IAAM,WAAW,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,cAApB,EAAoC,MAApC,CAApB;AAEA,OAAO,CAAC,GAAR,CAAY,8CAAZ,EAA6D,WAA7D;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;;AAIA,IAAM,MAAM,GAAG,SAAT,MAAS,CAAE,MAAF,EAAU,MAAV;AAAA,sCAAyB,MAAzB,sBAAoC,MAApC;AAAA,CAAf;;AAEA,OAAO,CAAC,GAAR,CAAY,wCAAZ,YAA2D,WAA3D,GAA0E,0BAA1E,YAA2G,WAA3G,GAAyH,aAAzH,EAAyI,MAAM,CAAC,WAAD,EAAc,WAAd,CAA/I;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;;AAIA,IAAM,WAAW,GAAG,CAAC,OAAD,EAAU,mBAAV,EAA+B,aAA/B,CAApB;AACA,IAAM,WAAW,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,CAApB;AAEA,OAAO,CAAC,GAAR,CAAY,0CAAZ,YAA6D,WAA7D;AACA,OAAO,CAAC,GAAR,CAAY,iBAAZ,YAAoC,WAApC;;AAEA,IAAM,SAAS,GAAG,SAAZ,SAAY;AAAA,oCAAI,GAAJ;AAAI,IAAA,GAAJ;AAAA;;AAAA,mBAAgB,GAAhB;AAAA,CAAlB;;AAEA,OAAO,CAAC,GAAR,CAAY,uHAAZ,EAAoI,WAApI,EAAgJ,WAAhJ,EAA4J,WAA5J,EAAwK,WAAxK;AACA,OAAO,CAAC,GAAR,CAAa,aAAb,EAA8B,SAAS,CAAC,WAAW,GAAG,GAAd,GAAoB,WAApB,GAAkC,GAAlC,GAAwC,WAAxC,GAAsD,GAAtD,GAA4D,WAA7D,CAAvC;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;AAEA,IAAM,IAAI,GAAG;AACT,EAAA,OAAO,EAAE,CADA;AAET,EAAA,QAAQ,EAAE,CAFD;AAGT,EAAA,KAAK,EAAE,CAHE;AAIT,EAAA,MAAM,EAAE;AAJC,CAAb;AAOA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAyC,IAAzC;;AAEA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAA,MAAM;AAAA,SAAI,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,MAAL,CAAJ;AAAA,CAApB;;AAEA,OAAO,CAAC,GAAR,CAAY,0DAAZ,EAAwE,KAAK,CAAC,IAAD,CAA7E;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;AAGA,IAAM,IAAI,GAAG;AACT,EAAA,OAAO,EAAE,CADA;AAET,EAAA,QAAQ,EAAE,CAFD;AAGT,EAAA,KAAK,EAAE,CAHE;AAIT,EAAA,aAAa,EAAE,CAJN;AAKT,EAAA,MAAM,EAAE,IALC;AAMT,EAAA,MAAM,EAAE;AANC,CAAb;AASA,OAAO,CAAC,GAAR,CAAY,yFAAZ,EAAuG,IAAvG;;AAEA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,MAAD,EAAS,MAAT;AAAA,SAAoB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,MAAL,CAAA,EAAgB,MAAhB,CAApB;AAAA,CAAd;;AAEA,OAAO,CAAC,GAAR,CAAY,6HAAZ,EAA2I,KAAK,CAAC,IAAD,EAAO,IAAP,CAAhJ;AACA,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAeA,IAAM,OAAO,GAAgB,EAA7B;AAGA,OAAO,CAAC,IAAR,CACI;AAAC,EAAA,KAAK,EAAE,yBAAR;AAAmC,EAAA,MAAM,EAAE;AAA3C,CADJ,EAEI;AAAC,EAAA,KAAK,EAAE,0BAAR;AAAoC,EAAA,MAAM,EAAE;AAA5C,CAFJ,EAGI;AAAC,EAAA,KAAK,EAAE,oBAAR;AAA8B,EAAA,MAAM,EAAE;AAAtC,CAHJ,EAII;AAAC,EAAA,KAAK,EAAE,WAAR;AAAqB,EAAA,MAAM,EAAE;AAA7B,CAJJ,EAKI;AAAC,EAAA,KAAK,EAAE,SAAR;AAAmB,EAAA,MAAM,EAAE;AAA3B,CALJ;;AAQA,YAAA,OAAO,EAAC,GAAR,kBAAY,iBAAZ,SAAkC,OAAlC;;AAEA,OAAO,CAAC,GAAR,CAAY,sEAAZ;;AAGA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD,EAAQ,QAAR,EAAqB;AACpC,SAAO,KAAK,CAAC,IAAN,CAAW,UAAA,IAAI;AAAA,WAAK,IAAI,CAAC,KAAL,KAAe,QAAf,IAA2B,IAAI,CAAC,MAAL,KAAgB,IAAhD;AAAA,GAAf,EAAsE,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAtE,CAAP;AACH,CAFD;;AAKA,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAU,yBAAV,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAU,wBAAV,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAU,0BAAV,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAU,oBAAV,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAU,WAAV,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAU,SAAV,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,OAAD,EAAS,0BAAT,CAAtB,GAA4E;;AAC5E,OAAO,CAAC,GAAR,CAAY,oCAAZ;AAGA;;;;;;;;;;IAUM;AAIF,yBAAA;AAAA;;AACI,SAAK,SAAL,GAAiB,CAAjB;AACH;;;;gCAEQ;AACL,aAAQ,IAAI,CAAC,MAAL,KAAgB,GAAxB;AACH;;;gCAEQ;AAEL,UAAI,KAAK,SAAL,MAAoB,KAAK,SAAL,EAApB,IAAwC,KAAK,SAAL,EAA5C,EAA6D;AAEzD,QAAA,OAAO,CAAC,GAAR,qCAAyC,KAAK,SAA9C;AACA,aAAK,SAAL,GAAiB,CAAjB;AAEH,OALD,MAKQ;AACJ,aAAK,SAAL;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,mCAAZ;AACA,QAAA,OAAO,CAAC,GAAR,iBAAqB,KAAK,SAA1B;AAEH;AACJ;;;2BAEG;AACA,WAAK,SAAL;AACH;;;;;;AAKL,IAAM,QAAQ,GAAG,IAAI,WAAJ,EAAjB;AAEA,QAAQ,CAAC,IAAT;AACA,QAAQ,CAAC,IAAT;;;ACrNA,IAAIA,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBI,IAAtB,CAA2BD,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTE,IAAAA,OAAO,EAAE,UAAUF,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBG,IAAvB,CAA4BD,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIY,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAP,CAAce,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAtB,MAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEApC,QAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIxB,QAAQ,CAAC0B,MAAb,EAAqB;AAAE;AAC5B1B,QAAAA,QAAQ,CAAC0B,MAAT;AACD;AACF;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACyB,KAAH;;AACAzB,MAAAA,EAAE,CAAC0B,OAAH,GAAa,YAAY;AACvB5B,QAAAA,QAAQ,CAAC0B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI5C,IAAI,CAACqB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB7C,IAAI,CAAC6C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C9C,IAAI,CAAC6C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAACjD,IAAD,CAAhC;AACAkD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB7D,UAAxB,CAAd;;AACA,MAAIwD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BjD,IAA5B,EAAkC;AAChC,MAAIgD,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACjB,EAAR,GAAavC,UAAb,CAFgC,CAIhC;;AACA,MAAIsD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBzD,IAAI,CAAC6C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBzD,IAAI,CAAC6C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBhE,MAApB,EAA4BoC,EAA5B,EAAgC;AAC9B,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKjC,EAAR,IAAekC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,KAAwBpC,EAAjE,EAAsE;AACpE8B,QAAAA,OAAO,CAACvD,IAAR,CAAawD,CAAb;AACD;AACF;AACF;;AAED,MAAInE,MAAM,CAACe,MAAX,EAAmB;AACjBmD,IAAAA,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAeT,UAAU,CAAChE,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO8B,OAAP;AACD;;AAED,SAASxB,QAAT,CAAkB1C,MAAlB,EAA0B8B,KAA1B,EAAiC;AAC/B,MAAImC,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACpC,MAAM,CAACe,MAAjC,EAAyC;AACvC,QAAIL,EAAE,GAAG,IAAIgE,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C5C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAtB;AACA6B,IAAAA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC1B,EAAD,EAAKoB,KAAK,CAAC6C,IAAX,CAApB;AACD,GAJD,MAIO,IAAI3E,MAAM,CAACe,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAAC1C,MAAM,CAACe,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBjC,MAAxB,EAAgCoC,EAAhC,EAAoC;AAClC,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC7B,EAAD,CAAR,IAAgBpC,MAAM,CAACe,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACX,MAAD,EAASoC,EAAT,CAApB;;AAEA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOR,UAAU,CAAC9B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqC0C,IAArC,CAA0C,UAAU1C,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB5C,MAAtB,EAA8BoC,EAA9B,EAAkC;AAChC,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AACApC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIsE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACxE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIsE,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BgE,MAAzD,EAAiE;AAC/DI,IAAAA,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BqB,OAA7B,CAAqC,UAAUkD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC/E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAP;AACApC,EAAAA,MAAM,CAACoC,EAAD,CAAN;AAEAwC,EAAAA,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAT;;AACA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9DI,IAAAA,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BsB,OAA5B,CAAoC,UAAUkD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["/**EJERCICIOS TEMA 2 LENGUAJES */\r\n\r\n/*Implementa una función head (inmutable), tal que, dado un array \r\n *como entrada extraiga y devuelva su primer elemento. Uliza destructuring.*/ \r\n\r\nconst transportsA = [\"bus\" ,\"coche\" ,\"moto\" ,\"bici\", \"patinete\"]\r\n\r\nconsole.log('Array transportsA: ' , transportsA);\r\nconsole.log(\"**********************************\");\r\n\r\nconst head = ([primero, ]: string[])  => primero;\r\n\r\n\r\nconsole.log('Primer elemento: ', head(transportsA));\r\nconsole.log(\"**********************************\");\r\n\r\n\r\n/**Implementa una función tail (inmutable), tal que, dado un array como \r\n *entradadevuelta todos menos el primer elemento. Uliza rest operator.*/\r\n\r\nconst tail = ([, ...todosMenosElPrimero]) => todosMenosElPrimero;\r\n\r\nconsole.log('Todos los elementos menos el primero: ', tail(transportsA));\r\nconsole.log(\"**********************************\");\r\n\r\n\r\n/**Implementa una función init (inmutable), tal que, dado un array como entrada devuelva \r\n * todos los elementos menos el último. Uliza los métodos que ofreceArray.prototype. */\r\n\r\n const init = arrayTransports => {\r\n    console.log(\"Eliminamos el último elemento: \", [arrayTransports.pop()]);\r\n    return arrayTransports; \r\n};\r\n\r\n\r\n/** Ahora el array contiene solo 4 objetos [\"bus\" ,\"coche\" ,\"moto, \"bici\"]*/\r\n\r\nconsole.log(\"El array transportsA tiene ahora 4 objetos : \", init(transportsA));\r\nconsole.log(\"**********************************\");\r\n\r\n\r\n/**Implementa una función last (inmutable), tal que, dado un array como entrada devuelva \r\n * el último elemento. */\r\n\r\nconst last = arrayTransports =>  [arrayTransports.pop()];\r\n\r\n// const last = ([...firstElements, lastElement]) => lastElement;  ?????????????????????????????????????????????????????????????????????????????????????????????????\r\n\r\n\r\nconsole.log(\"Ahora le quitamos el último elemento al array transportsA usando de nuevo .pop(), en este caso sería el elemento:  \", last(transportsA))\r\nconsole.log(\"Por lo que nos dejará el array transportA con solo tres elementos: \", transportsA);\r\nconsole.log(\"**********************************\");\r\n\r\nconst transportsB = [\"barco\", \"lancha\", \"moto de agua\", \"yate\"];\r\n\r\nconsole.log(\"Nos dan un nuevo array llamado transportsB: \" , transportsB);\r\nconsole.log(\"**********************************\");\r\n\r\n\r\n/** Implementa una función concat (inmutable) tal que, dados 2 arrays como entrada,devuelva \r\n *  la concatenación de ambos. Uliza rest / spread operators \r\n */\r\n\r\nconst concat = ( arrayA, arrayB) => [...arrayA, ...arrayB];\r\n\r\nconsole.log(\"Concatenación de array 'transportsA': \" , [...transportsA] , \" y array 'transportsB': \" , [...transportsB], \"Resultado: \" , concat(transportsA, transportsB) );\r\nconsole.log(\"**********************************\");\r\n\r\n\r\n/** Implementa una versión del ejercicio anterior donde se acepten múltiples arrays deentrada (más de 2).\r\n * \r\n */\r\n\r\nconst transportsC = [\"avión\", \"globo aerostático\", \"helicóptero\" ];\r\nconst transportsD = [\"tren\", \"tranvía\", \"AVE\"]\r\n\r\nconsole.log(\"Creamos dos arrays nuevos, transportsC: \" , [...transportsC]  );\r\nconsole.log(\"Y transportsD: \" , [...transportsD]);\r\n\r\nconst concatAny = (...any) => [...any];\r\n\r\nconsole.log(\"La función concatAny acepta un número indefinido de argumentos, en este caso le pasaremos los cuatro arrays creados: \",transportsA,transportsB,transportsC,transportsD );\r\nconsole.log( \"Resultado: \" , (concatAny(transportsA + \",\" + transportsB + \",\" + transportsC + \",\" + transportsD )));\r\nconsole.log(\"**********************************\");\r\n\r\n\r\n/**Implementa una función clone que, a partir del objeto de entrada source devuelva un nuevo objeto con las mismas propiedades: */\r\n\r\nconst obj1 = {\r\n    puertas: 4,\r\n    ventanas: 4,\r\n    motor: 1,\r\n    ruedas: 4,\r\n}\r\n\r\nconsole.log(\"Creamos el objeto obj1: \" , obj1);\r\n\r\nconst clone = source => ({...source});\r\n    \r\nconsole.log(\"Y de nuevo creamos un objeto, pero este a partir de obj \", clone(obj1));\r\nconsole.log(\"**********************************\");   \r\n\r\n\r\n/**Implementa una función merge que, dados dos objetos de entrada source y target,devuelva un nuevo objeto con todas las propiedades de target y \r\n * de source, y en caso de propiedades con el mismo nombre, source sobreescribe a target. */\r\n\r\nconst obj2 = {\r\n    puertas: 2,\r\n    ventanas: 2,\r\n    motor: 2,\r\n    tubosDeEscape: 2,\r\n    extras: \"si\",\r\n    ruedas: 2,\r\n}\r\n\r\nconsole.log(\"Ahora creamos el objeto obj2, que tiene dos elementos nuevos (tubosDeEscape y extras): \", obj2)\r\n\r\nconst merge = (source, target) => ({...target, ...source});\r\n\r\nconsole.log(\"El resultado de hacer merge de dos objetos respetando los elementos del primero, y añadiendo los elementos del segundo es: \", merge(obj1, obj2));\r\nconsole.log(\"**********************************\");   \r\n\r\n\r\n/**Crea una función isBookRead que reciba una lista de libros y un titulo y devuelva si se ha leído o no dicho libro. Un libro es un objeto con title como\r\n*  string y isRead como booleano. En caso de no existir el libro devolver false */\r\n\r\n\r\n/**Opcional\r\n* Uliza Typescript para añadir los tipos adecuados. */ \r\n\r\ninterface Book {\r\n    title: string;\r\n    isRead: boolean;\r\n} \r\n\r\nconst library: Array<Book> = [];\r\n\r\n\r\nlibrary.push(\r\n    {title: \"El señor de los anillos\", isRead: true},\r\n    {title: \"Los pilares de la tierra\", isRead: true},\r\n    {title: \"El código Da Vinci\", isRead: true},\r\n    {title: \"El Hobbit\", isRead: false},\r\n    {title: \"Fariñas\", isRead: true}\r\n);    \r\n\r\nconsole.log(\"Array library: \", ...library); \r\n\r\nconsole.log(\"Ahora filtramos todos los libros del array por su propiedad isRead: \");\r\n\r\n\r\nconst isBookread = (books, anyTitle)  => {\r\n    return books.some(book => (book.title === anyTitle && book.isRead === true), console.log(anyTitle));\r\n} \r\n        \r\n\r\nconsole.log(isBookread(library, \"El señor de los anillos\"));                // true, está en la lista y leído.  \r\nconsole.log(isBookread(library, \"El asesinato de PLatón\"));                 // false, no está en la lista.  \r\nconsole.log(isBookread(library, \"Los pilares de la tierra\"));               // true, está en la lista y leído.\r\nconsole.log(isBookread(library, \"El código Da Vinci\"));                     // true, está en la lista y leído.\r\nconsole.log(isBookread(library, \"El Hobbit\"));                              // false, está en la lista, pero no se ha leído. \r\nconsole.log(isBookread(library, \"Fariñas\"));                                // true, está en la lista y leído. \r\nconsole.log(isBookread(library,\"La rebelión de las masas\"));                // false, no está en la lista.\r\nconsole.log(\"**********************************\");   \r\n\r\n\r\n/**El objevo de este ejercicio es crear una máquina tragaperras ulizando clases donde cada vez que juguemos insertemos una moneda. \r\n * Cada máquina tragaperras (instancia) tendrá un contador de monedas que automáticamente se irá incrementando conforme vayamos jugando.\r\n * Cuando se llame al método play el número de monedas se debe incrementar de forma automática y debe generar tres booleanos aleatorios que \r\n * representarán el estado de las 3 ruletas. \r\n * El usuario habrá ganado en caso de que los tres booleanos sean true, y por tanto deberá mostrarse por consola el mensaje:\r\n * \"Congratulations!!!. You won <número de monedas> coins!!\"y reiniciar las monedas almacenadas, ya que las hemos conseguido y han\r\n * salido de la máquina.\r\n * En caso contrario deberá mostrar otro mensaje:\"Good luck next time!!\". \r\n*/\r\n\r\nclass SlotMachine {\r\n    \r\n    container: number;\r\n\r\n    constructor() {\r\n        this.container = 0;\r\n    }\r\n\r\n    getRandom() {\r\n        return  Math.random() < 0.5 ;\r\n    }\r\n    \r\n    getResult() {\r\n\r\n        if (this.getRandom() && this.getRandom() && this.getRandom()){\r\n\r\n            console.log(`Felicidades!!! Has ganado ${this.container} monedas`);\r\n            this.container = 0;\r\n\r\n        } else  {\r\n            this.container ++;\r\n            console.log(\"Has perdido, sigue intentándolo. \");\r\n            console.log(`Bote: ${this.container}`);\r\n            \r\n        }\r\n    }\r\n\r\n    play() {\r\n        this.getResult();\r\n    }\r\n}\r\n\r\n\r\n\r\nconst maquina1 = new SlotMachine();\r\n\r\nmaquina1.play();\r\nmaquina1.play();\r\n\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}